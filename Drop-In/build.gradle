plugins {
    id 'com.android.library'
    id 'de.marcphilipp.nexus-publish'
    id 'signing'
}
apply plugin: 'kotlin-android'

def LOCALHOST_IP = System.properties['LOCALHOST_IP'] ?: '"10.0.2.2"';
def GATEWAY_IP = System.properties['GATEWAY_IP'] ?: '"10.0.2.2"';
def GATEWAY_PORT = System.properties['GATEWAY_PORT'] ?: '"3000"';

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        consumerProguardFiles 'proguard.pro'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    resourcePrefix 'bt_'

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    testOptions.unitTests {
        returnDefaultValues true
        includeAndroidResources true
    }

    lintOptions {
        warning 'GradleCompatible'
        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage' // The Cardinal SDK is referencing the `javax.naming` package but it is unavailable
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
    }

    buildTypes.debug { type ->
        type.buildConfigField 'String', 'LOCALHOST_IP', LOCALHOST_IP
        type.buildConfigField 'String', 'GATEWAY_IP', GATEWAY_IP
        type.buildConfigField 'String', 'GATEWAY_PORT', GATEWAY_PORT
    }
}

dependencies {
    api 'com.braintreepayments.api:braintree:3.15.0'
    api 'com.braintreepayments:card-form:5.0.0'
    api 'com.braintreepayments.api:three-d-secure:3.14.2'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.gms:play-services-wallet:16.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'

    testImplementation 'com.squareup.assertj:assertj-android:1.1.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.skyscreamer:jsonassert:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.0.0-beta02'
    testImplementation "androidx.core:core-ktx:+"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

// region signing and publishing

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set('javadoc')
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

signing {
    required {
        !version.endsWith("SNAPSHOT") && !version.endsWith("DEVELOPMENT")
    }
    sign publishing.publications
}

nexusPublishing {
    // give nexus sonatype more time to initialize the staging repository
    clientTimeout = Duration.ofMinutes(3)
    repositories {
        sonatype()
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.braintreepayments.api'
                artifactId = 'drop-in'
                version = rootProject.versionName

                pom {
                    name = 'drop-in'
                    packaging = 'aar'
                    description = 'Drop-in payment form for Braintree\'s Android SDK. Integrate this library to add a readymade UI for your payments.'
                    url = 'https://github.com/braintree/braintree-android-drop-in'

                    scm {
                        url = 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                        connection = 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                        developerConnection = 'scm:git@github.com:braintree/braintree-android-drop-in.git'
                    }

                    developers {
                        developer {
                            id = 'devs'
                            name = 'Braintree Payments'
                        }
                    }

                    licenses {
                        license {
                            name = 'MIT'
                            url = 'http://opensource.org/licenses/MIT'
                            distribution = 'repo'
                        }
                    }
                }
            }
        }
    }
}
repositories {
    mavenCentral()
}

// endregion
